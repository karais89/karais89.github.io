"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[437],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,f=u["".concat(l,".").concat(d)]||u[d]||h[d]||i;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},70778:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={},s=void 0,o={permalink:"/2019/01/10/codewars-Alphabet-war-airstrike-letters-massacre",editUrl:"https://github.com/karais89/karais89.github.io/tree/main/my-website/blog/2019-01-10-codewars-Alphabet-war-airstrike-letters-massacre/index.md",source:"@site/blog/2019-01-10-codewars-Alphabet-war-airstrike-letters-massacre/index.md",title:"codewars-Alphabet-war-airstrike-letters-massacre",description:"--",date:"2019-01-10T00:00:00.000Z",formattedDate:"2019\ub144 1\uc6d4 10\uc77c",tags:[],readingTime:2.835,hasTruncateMarker:!1,authors:[],frontMatter:{},prevItem:{title:"[Codewars #26] extract file name (6kyu)",permalink:"/2019/01/11/codewars-extract-file-name"},nextItem:{title:"[Codewars #23] Sum The Tree (6kyu)",permalink:"/2019/01/10/codewars-Sum-The-Tree"}},l={authorsImageUrls:[]},c=[{value:"tags: codewars, kata",id:"tags-codewars-kata",level:2},{value:"Instructions",id:"instructions",level:2},{value:"My Solution",id:"my-solution",level:2},{value:"Best Practices",id:"best-practices",level:2}],p={toc:c};function h(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'--\ntitle: "',"[Codewars #24]",' Alphabet war - airstrike - letters massacre (6kyu)"\nauthors: ',"[karais89]"),(0,a.kt)("h2",{id:"tags-codewars-kata"},"tags: ","[codewars, kata]"),(0,a.kt)("h2",{id:"instructions"},"Instructions"),(0,a.kt)("p",null,"There is a war and nobody knows - the alphabet war!\nThere are two groups of hostile letters. The tension between left side letters and right side letters was too high and the war began. The letters called airstrike to help them in war - dashes and dots are spreaded everywhere on the battlefield."),(0,a.kt)("p",null,"Task"),(0,a.kt)("p",null,"Write a function that accepts fight string consists of only small letters and * which means a bomb drop place. Return who wins the fight after bombs are exploded. When the left side wins return Left side wins!, when the right side wins return Right side wins!, in other case return Let's fight again!."),(0,a.kt)("p",null,"The left side letters and their power:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," w - 4\n p - 3\n b - 2\n s - 1\n")),(0,a.kt)("p",null,"The right side letters and their power:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"m - 4\n q - 3\n d - 2\n z - 1\n")),(0,a.kt)("p",null,"The other letters don't have power and are only victims.\nThe ",(0,a.kt)("em",{parentName:"p"}," bombs kills the adjacent letters ( i.e. aa"),"aa => a",(0,a.kt)("strong",{parentName:"p"},"_a, ",(0,a.kt)("strong",{parentName:"strong"},"aa")," => ____")," );"),(0,a.kt)("p",null,"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'AlphabetWar("s*zz"); //=> Right side wins!\nAlphabetWar("*zd*qm*wp*bs*"); //=> Let\'s fight again!\nAlphabetWar("zzzz*s*"); //=> Right side wins!\nAlphabetWar("www*www****z"); //=> Left side wins!\n')),(0,a.kt)("h2",{id:"my-solution"},"My Solution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"}," using System;\n using System.Collections.Generic;\n\n public class Kata\n {\n    public static string AlphabetWar(string fight)\n    {\n      Dictionary<char, int> leftSideScores = new Dictionary<char, int>()\n      {\n        { 'w', 4 }, { 'p', 3 }, { 'b', 2 }, { 's', 1 }\n      };\n\n      Dictionary<char, int> rightSideScores = new Dictionary<char, int>()\n      {\n        { 'm', 4 }, { 'q', 3 }, { 'd', 2 }, { 'z', 1 }\n      };\n\n      // remove *\n      char[] arr = fight.ToCharArray();\n      for (int i = 0; i < arr.Length; i++)\n      {\n        if (arr[i] == '*')\n        {\n          arr[i] = '_';\n\n          if (i-1 >= 0 && arr[i-1] != '*')\n            arr[i-1] = '_';\n\n          if (i+1 < arr.Length && arr[i+1] != '*')\n            arr[i+1] = '_';\n        }\n      }\n\n      int totalLeftScore = 0;\n      int totalRightScore = 0;\n      for (int i = 0; i < arr.Length; i++)\n      {\n        if (leftSideScores.ContainsKey(arr[i]))\n          totalLeftScore += leftSideScores[arr[i]];\n        else if (rightSideScores.ContainsKey(arr[i]))\n          totalRightScore += rightSideScores[arr[i]];\n      }\n\n\n      if (totalLeftScore > totalRightScore)\n      {\n        return \"Left side wins!\";\n      }\n      else if (totalLeftScore < totalRightScore)\n      {\n        return \"Right side wins!\";\n      }\n\n      return \"Let's fight again!\";\n    }\n }\n")),(0,a.kt)("p",null,"Left Side Score \ubc0f Right Side Score\uc758 \uacbd\uc6b0 \ub515\uc154\ub108\ub9ac\uc5d0 \uc800\uc7a5\ud574\uc11c \uc0ac\uc6a9.\nString\uc744 Char \ubc30\uc5f4\ub85c \ub9cc\ub4e0 \ud6c4\uc5d0 *\uc758 \uc81c\uac70 \ucc98\ub9ac\ub97c \ud558\uace0, \uc810\uc218\ub97c \uad6c\ud558\ub294 \uc2dd\uc73c\ub85c \ud574\uacb0"),(0,a.kt)("h2",{id:"best-practices"},"Best Practices"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing System.Linq;\nusing System.Collections.Generic;\npublic class Kata\n{\n  public static string AlphabetWar(string fight)\n  {\n    Regex rgx = new Regex(@"\\w{0,1}[*+]\\w{0,1}");\n    int leftPower = 0;\n    int rightPower = 0;\n    string afterBombing = rgx.Replace(fight, "");\n    foreach(char c in afterBombing)\n    {\n      if(lefts.ContainsKey(c)) leftPower += lefts[c];\n      else if(rights.ContainsKey(c)) rightPower += rights[c];\n    }\n    if (leftPower == rightPower) return "Let\'s fight again!";\n    else return (leftPower > rightPower)? "Left side wins!":"Right side wins!";\n  }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ubb38\uc790\ub97c \uc81c\uac70\ud558\ub294 \ubd80\ubd84\uc744 \uc815\uaddc \ud45c\ud604\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc\uc758 \uae38\uc774\ub97c \uc904\uc600\ub2e4.\n\ub098\uba38\uc9c0 \uc810\uc218\ub97c \uad6c\ud558\ub294 \ubc29\uc2dd\uc740 \ub611\uac19\ub2e4.")))}h.isMDXComponent=!0}}]);