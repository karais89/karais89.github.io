"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2937],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),g=i,m=d["".concat(l,".").concat(g)]||d[g]||p[g]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},32216:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(87462),i=(n(67294),n(3905));const a={title:"[Codewars #30]  Playing with digits (6kyu)",authors:["karais89"],tags:["codewars","kata"]},o=void 0,s={permalink:"/2019/01/13/codewars-Playing-with-digits",editUrl:"https://github.com/karais89/karais89.github.io/tree/main/my-website/blog/2019-01-13-codewars-Playing-with-digits/index.md",source:"@site/blog/2019-01-13-codewars-Playing-with-digits/index.md",title:"[Codewars #30]  Playing with digits (6kyu)",description:"Instructions",date:"2019-01-13T00:00:00.000Z",formattedDate:"2019\ub144 1\uc6d4 13\uc77c",tags:[{label:"codewars",permalink:"/tags/codewars"},{label:"kata",permalink:"/tags/kata"}],readingTime:1.97,hasTruncateMarker:!1,authors:[{name:"karais89",title:"Game Developer",url:"https://github.com/karais89",imageURL:"https://github.com/karais89.png",key:"karais89"}],frontMatter:{title:"[Codewars #30]  Playing with digits (6kyu)",authors:["karais89"],tags:["codewars","kata"]},prevItem:{title:"[Codewars #29] +1 Array (6kyu)",permalink:"/2019/01/13/codewars-Array"},nextItem:{title:"[Codewars #28] Write Number in Expanded Form (6kyu)",permalink:"/2019/01/12/codewars-Write-Number-in-Expanded-Form"}},l={authorsImageUrls:[void 0]},u=[{value:"Instructions",id:"instructions",level:2},{value:"My Solution",id:"my-solution",level:2},{value:"Best Practices",id:"best-practices",level:2}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"instructions"},"Instructions"),(0,i.kt)("p",null,"Some numbers have funny properties. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"89 --\x3e 8\xb9 + 9\xb2 = 89 * 1\n\n695 --\x3e 6\xb2 + 9\xb3 + 5\u2074= 1390 = 695 * 2\n\n46288 --\x3e 4\xb3 + 6\u2074+ 2\u2075 + 8\u2076 + 8\u2077 = 2360688 = 46288 * 51\n")),(0,i.kt)("p",null,"Given a positive integer n written as abcd... (a, b, c, d... being digits) and a positive integer p we want to find a positive integer k, if it exists, such as the sum of the digits of n taken to the successive powers of p is equal to k * n. In other words:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Is there an integer k such as : (a ^ p + b ^ (p+1) + c ^(p+2) + d ^ (p+3) + ...) = n * k\n")),(0,i.kt)("p",null,"If it is the case we will return k, if not return -1."),(0,i.kt)("p",null,"Note: n, p will always be given as strictly positive integers."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"digPow(89, 1) should return 1 since 8\xb9 + 9\xb2 = 89 = 89 * 1\ndigPow(92, 1) should return -1 since there is no k such as 9\xb9 + 2\xb2 equals 92 * k\ndigPow(695, 2) should return 2 since 6\xb2 + 9\xb3 + 5\u2074= 1390 = 695 * 2\ndigPow(46288, 3) should return 51 since 4\xb3 + 6\u2074+ 2\u2075 + 8\u2076 + 8\u2077 = 2360688 = 46288 * 51\n")),(0,i.kt)("h2",{id:"my-solution"},"My Solution"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\n\npublic class DigPow {\n public static long digPow(int n, int p) {\n  string strN = n.ToString();\n    long sum = 0;\n    for (int i = 0; i < strN.Length; i++)\n    {\n      int digit = int.Parse(strN[i].ToString());\n      long powVal = (long)Math.Pow(digit, p + i);\n      sum += powVal;\n    }\n\n    if (sum % n == 0)\n    {\n      return sum / n;\n    }\n\n    return -1;\n }\n}\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"int\ud615\uc744 String\uc73c\ub85c \ubcc0\ud658"),(0,i.kt)("li",{parentName:"ol"},"\uac01 \uc790\ub9bf\uc218 \ub300\ub85c \uc81c\uacf1 \ud574\uc900\ud6c4 \ub354\ud574\uc900\ub2e4."),(0,i.kt)("li",{parentName:"ol"},"\ub354\ud574\uc900 \uac12\uc774 n\uc73c\ub85c \ub098\ub204\uc5b4\uc9c0\uba74 \ubaab \ubc18\ud658. \uc544\ub2c8\uba74 -1 \ubc18\ud658")),(0,i.kt)("h2",{id:"best-practices"},"Best Practices"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"using System.Linq;\nusing System;\n\npublic class DigPow {\n  public static long digPow(int n, int p) {\n    var sum = Convert.ToInt64(n.ToString().Select(s => Math.Pow(int.Parse(s.ToString()), p++)).Sum());\n    return sum % n == 0 ? sum / n : -1;\n  }\n}\n")),(0,i.kt)("p",null,"Linq\ub294 2\uc904\uc774\uba74 \ud574\uacb0"))}p.isMDXComponent=!0}}]);