"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[92800],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,g=p["".concat(s,".").concat(m)]||p[m]||h[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},83197:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={title:"[Codewars #35] Street Fighter 2 - Character Selection (6kyu)",authors:["karais89"],tags:["codewars","kata"]},i=void 0,l={permalink:"/2019/01/19/codewars-Street-Fighter-2-Character-Selection",editUrl:"https://github.com/karais89/karais89.github.io/tree/main/my-website/blog/2019-01-19-codewars-Street-Fighter-2-Character-Selection/index.md",source:"@site/blog/2019-01-19-codewars-Street-Fighter-2-Character-Selection/index.md",title:"[Codewars #35] Street Fighter 2 - Character Selection (6kyu)",description:"Instructions",date:"2019-01-19T00:00:00.000Z",formattedDate:"2019\ub144 1\uc6d4 19\uc77c",tags:[{label:"codewars",permalink:"/tags/codewars"},{label:"kata",permalink:"/tags/kata"}],readingTime:4.21,hasTruncateMarker:!1,authors:[{name:"karais89",title:"Game Developer",url:"https://github.com/karais89",imageURL:"https://github.com/karais89.png",key:"karais89"}],frontMatter:{title:"[Codewars #35] Street Fighter 2 - Character Selection (6kyu)",authors:["karais89"],tags:["codewars","kata"]},prevItem:{title:"[Codewars #38] Play with two Strings (5kyu)",permalink:"/2019/01/19/codewars-Play-with-two-Strings"},nextItem:{title:"[Codewars #34] Reverse or rotate? (6kyu)",permalink:"/2019/01/18/codewars-Reverse-or-rotate"}},s={authorsImageUrls:[void 0]},u=[{value:"Instructions",id:"instructions",level:2},{value:"My Solution",id:"my-solution",level:2},{value:"Best Practices",id:"best-practices",level:2}],c={toc:u};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"instructions"},"Instructions"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.codewars.com/kata/5853213063adbd1b9b0000be/train/csharp"},"\ub9c1\ud06c")),(0,a.kt)("p",null,"Short Intro"),(0,a.kt)("p",null,"Some of you might remember spending afternoons playing Street Fighter 2 in some Arcade back in the 90s or emulating it nowadays with the numerous emulators for retro consoles."),(0,a.kt)("p",null,"Can you solve this kata? Suuure-You-Can!"),(0,a.kt)("p",null,"UPDATE: a new kata's harder version is available here."),(0,a.kt)("p",null,"The Kata"),(0,a.kt)("p",null,"You'll have to simulate the video game's character selection screen behaviour, more specifically the selection grid. Such screen looks like this:"),(0,a.kt)("p",null,"Selection Grid Layout in text:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"| Ryu | E.Honda | Blanka | Guile | Balrog | Vega |\n| Ken | Chun Li | Zangief | Dhalsim | Sagat | M.Bison |\n")),(0,a.kt)("p",null,"Input"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the list of game characters in a 2x6 grid;"),(0,a.kt)("li",{parentName:"ul"},"the initial position of the selection cursor (top-left is (0,0));"),(0,a.kt)("li",{parentName:"ul"},"a list of moves of the selection cursor (which are up, down, left, right);")),(0,a.kt)("p",null,"Output"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the list of characters who have been hovered by the selection cursor after all the moves (ordered and with repetition, all the ones after a move, wether successful or not, see tests);")),(0,a.kt)("p",null,"Rules"),(0,a.kt)("p",null,"Selection cursor is circular horizontally but not vertically!"),(0,a.kt)("p",null,"As you might remember from the game, the selection cursor rotates horizontally but not vertically; that means that if I'm in the leftmost and I try to go left again I'll get to the rightmost (examples: from Ryu to Vega, from Ken to M.Bison) and vice versa from rightmost to leftmost."),(0,a.kt)("p",null,"Instead, if I try to go further up from the upmost or further down from the downmost, I'll just stay where I am located (examples: you can't go lower than lowest row: Ken, Chun Li, Zangief, Dhalsim, Sagat and M.Bison in the above image; you can't go upper than highest row: Ryu, E.Honda, Blanka, Guile, Balrog and Vega in the above image)."),(0,a.kt)("p",null,"Test"),(0,a.kt)("p",null,"For this easy version the fighters grid layout and the initial position will always be the same in all tests, only the list of moves change."),(0,a.kt)("p",null,"Notice : changing some of the input data might not help you."),(0,a.kt)("p",null,"Examples"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'fighters = [\n    ["Ryu", "E.Honda", "Blanka", "Guile", "Balrog", "Vega"],\n    ["Ken", "Chun Li", "Zangief", "Dhalsim", "Sagat", "M.Bison"]\n]\ninitial_position = (0,0)\nmoves = [\'up\', \'left\', \'right\', \'left\', \'left\']\n')),(0,a.kt)("p",null,"then I should get:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"['Ryu', 'Vega', 'Ryu', 'Vega', 'Balrog']\n")),(0,a.kt)("p",null,'as the characters I\'ve been hovering with the selection cursor during my moves. Notice: Ryu is the first just because it "fails" the first up See test cases for more examples.'),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'fighters = [\n    ["Ryu", "E.Honda", "Blanka", "Guile", "Balrog", "Vega"],\n    ["Ken", "Chun Li", "Zangief", "Dhalsim", "Sagat", "M.Bison"]\n]\ninitial_position = (0,0)\nmoves = [\'right\', \'down\', \'left\', \'left\', \'left\', \'left\', \'right\']\n')),(0,a.kt)("p",null,"Result:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"['E.Honda', 'Chun Li', 'Ken', 'M.Bison', 'Sagat', 'Dhalsim', 'Sagat']\n")),(0,a.kt)("p",null,"OFF-TOPIC"),(0,a.kt)("p",null,"Some music to get in the mood for this kata :"),(0,a.kt)("p",null,"Street Fighter 2 - selection theme"),(0,a.kt)("h2",{id:"my-solution"},"My Solution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Kata\n{\n    public string[] StreetFighterSelection(string[][] fighters, int[] position, string[] moves)\n    {\n        int col = fighters.Length;\n        int row = fighters[0].Length;\n\n        int curCol = position[0];\n        int curRow = position[1];\n\n        List<string> charTracking = new List<string>();\n        for (int i = 0; i < moves.Length; i++)\n        {\n          int moveCol;\n          int moveRow;\n          switch (moves[i])\n          {\n            case "up":\n              moveCol = curCol - 1;\n              if (moveCol >= 0)\n              {\n                curCol = moveCol;\n              }\n              break;\n            case "down":\n              moveCol = curCol + 1;\n              if (moveCol < col)\n              {\n                curCol = moveCol;\n              }\n              break;\n            case "left":\n              moveRow = curRow - 1;\n              curRow = moveRow < 0 ? row - 1 : moveRow;\n              break;\n            case "right":\n              moveRow = curRow + 1;\n              curRow = moveRow > row - 1 ? 0 : moveRow;\n              break;\n          }\n          charTracking.Add(fighters[curCol][curRow]);\n        }\n        return charTracking.ToArray();\n    }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\uac8c\uc784 \uce90\ub9ad\ud130\uc758 \ub9ac\uc2a4\ud2b8\ub294 2x6 \uadf8\ub9ac\ub4dc \uc774\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc120\ud0dd \ucee4\uc11c\uc758 \ucd08\uae30 \uc704\uce58\ub294 0,0 \uc774\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\uc120\ud0dd \ucee4\uc11c\ub294 \uc704, \uc544\ub798, \uc88c, \uc6b0\ub85c \uc774\ub3d9\ud560 \uc218 \uc788\ub2e4."),(0,a.kt)("li",{parentName:"ul"},"\ucee4\uc11c\uc758 \uc21c\ud658\uc740 (\uc591 \uc606 \ud639\uc740 \uc704) \uc218\ud3c9\uc73c\ub85c\ub9cc \uac00\ub2a5 \ud558\ub2e4.")),(0,a.kt)("h2",{id:"best-practices"},"Best Practices"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Kata\n{\n  public string[] StreetFighterSelection(string[][] fighters, int[] position, string[] moves)\n  {\n    var results = new List<string>();\n    var row = 0;\n    var col = 0;\n\n    foreach (var s in moves) {\n      switch (s) {\n        case "up": row -= 1;\n          break;\n        case "down": row += 1;\n          break;\n        case "left": col -= 1;\n          break;\n        case "right": col += 1;\n          break;\n      }\n      if (row < 0) row = 0;\n      if (row == fighters.Length) row--;\n      if (col == fighters[0].Length) col = 0;\n      if (col == -1) col = fighters[0].Length - 1;\n\n      results.Add(fighters[row][col]);\n    }\n\n    return results.ToArray();\n  }\n}\n')),(0,a.kt)("p",null,"\uac70\uc758 \uc720\uc0ac\ud558\uc9c0\ub9cc, \ubc94\uc704 \uccb4\ud06c\ub97c \ub9e8 \uc544\ub798\uc5d0\uc11c \ud574\uc8fc\uc5c8\ub2e4.\n\ubc94\uc704\uccb4\ud06c\ub97c \uc6c0\uc9c1\uc77c\ub54c\ub9c8\ub2e4 \ud574\uc8fc\ub294 \uac83\ubcf4\ub2e4 \ub9e8 \ub9c8\uc9c0\ub9c9\uc5d0 \ud574\uc8fc\ub294\uac8c \uae54\ub054\ud55c \ub290\ub08c\ub3c4 \ub4e0\ub2e4."))}h.isMDXComponent=!0}}]);