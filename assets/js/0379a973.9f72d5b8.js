"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8869],{3905:(n,e,t)=>{t.d(e,{Zo:()=>m,kt:()=>d});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var l=r.createContext({}),u=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},m=function(n){var e=u(n.components);return r.createElement(l.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,l=n.parentName,m=s(n,["components","mdxType","originalType","parentName"]),c=u(t),d=i,k=c["".concat(l,".").concat(d)]||c[d]||p[d]||a;return t?r.createElement(k,o(o({ref:e},m),{},{components:t})):r.createElement(k,o({ref:e},m))}));function d(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,o=new Array(a);o[0]=c;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s.mdxType="string"==typeof n?n:i,o[1]=s;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},48297:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=t(87462),i=(t(67294),t(3905));const a={title:"[HackerRank #16] Implementation - Birthday Chocolate",authors:["karais89"],tags:["hackerrank"]},o=void 0,s={permalink:"/2017/11/12/HackerRank-Implementation-Birthday-Chocolate",editUrl:"https://github.com/karais89/karais89.github.io/tree/main/my-website/blog/2017-11-12-HackerRank-Implementation-Birthday-Chocolate/index.md",source:"@site/blog/2017-11-12-HackerRank-Implementation-Birthday-Chocolate/index.md",title:"[HackerRank #16] Implementation - Birthday Chocolate",description:"\ubb38\uc81c \uc694\uc57d",date:"2017-11-12T00:00:00.000Z",formattedDate:"2017\ub144 11\uc6d4 12\uc77c",tags:[{label:"hackerrank",permalink:"/tags/hackerrank"}],readingTime:3.93,hasTruncateMarker:!1,authors:[{name:"karais89",title:"Game Developer",url:"https://github.com/karais89",imageURL:"https://github.com/karais89.png",key:"karais89"}],frontMatter:{title:"[HackerRank #16] Implementation - Birthday Chocolate",authors:["karais89"],tags:["hackerrank"]},prevItem:{title:"[HackerRank #14] Implementation - Between Two Sets",permalink:"/2017/11/12/HackerRank-Implementation-Between-Two-Sets"},nextItem:{title:"[HackerRank #15] Implementation - Breaking the Records",permalink:"/2017/11/12/HackerRank-Implementation-Breaking-the-Records"}},l={authorsImageUrls:[void 0]},u=[{value:"\ubb38\uc81c \uc694\uc57d",id:"\ubb38\uc81c-\uc694\uc57d",level:2},{value:"\ub0b4 \uc18c\uc2a4",id:"\ub0b4-\uc18c\uc2a4",level:2},{value:"adititayal9\uc758 \ub2f5\uc548",id:"adititayal9\uc758-\ub2f5\uc548",level:2},{value:"Prince_sai\uc758 \ub2f5\uc548",id:"prince_sai\uc758-\ub2f5\uc548",level:2},{value:"kcoddington0925\uc758 \ub2f5\uc548",id:"kcoddington0925\uc758-\ub2f5\uc548",level:2},{value:"\ub290\ub080\uc810",id:"\ub290\ub080\uc810",level:2}],m={toc:u};function p(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\ubb38\uc81c-\uc694\uc57d"},"\ubb38\uc81c \uc694\uc57d"),(0,i.kt)("p",null,"\ub9b4\ub9ac\ub294 \ucd08\ucf5c\ub81b n \uc904\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4."),(0,i.kt)("p",null,"\ub860\uc758 \uc0dd\uc77c\uc774\ub77c \ub9b4\ub9ac\ub294 \uc790\uc2e0\uc758 \ucd08\ucf5c\ub9bf \ubc14\ub97c \uc77c\ubd80\ubd84 \uc904\ub824\uace0 \ud55c\ub2e4."),(0,i.kt)("p",null,"\uc0dd\uc77c\uc758 \uc6d4\uc740 m\uc77c\uc740 d\ub77c\uace0 \ud588\uc744\uc2dc m\uc5d0 \uc5f0\uc18d\ub41c \uc22b\uc790\uc758 \ud569\uc774 d\uc640 \uc77c\uce58\ud558\ub294 \uc22b\uc790\uc758 \uce74\uc6b4\ud130 \ub9cc\ud07c \uc904\ub824\uace0 \ud55c\ub2e4."),(0,i.kt)("p",null,"Sample Input 0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"5\n1 2 1 3 2 \n3 2\n")),(0,i.kt)("p",null,"Sample Output 0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"2\n")),(0,i.kt)("p",null,"2\ubc88 \uc5f0\uc18d\ud574\uc11c \ub098\uc624\ub294 \uc218\uc758 \ud569\uc774 3\uc778 \uc22b\uc790."),(0,i.kt)("p",null,"1+2=3, 2+1=3 \uc774\ubbc0\ub85c 2\uac1c\uc774\ub2e4."),(0,i.kt)("p",null,"Sample Input 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"6\n1 1 1 1 1 1\n3 2\n")),(0,i.kt)("p",null,"Sample Output 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"0\n")),(0,i.kt)("p",null,"2\ubc88 \uc5f0\uc18d\ud574\uc11c \ub098\uc628 \uc22b\uc790\uc758 \ud569\uc774 6\uc778 \uac83\uc740 \uc5c6\ub2e4."),(0,i.kt)("p",null,"Sample Input 2"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"1\n4\n4 1\n")),(0,i.kt)("p",null,"Sample Output 2"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"1\n")),(0,i.kt)("h2",{id:"\ub0b4-\uc18c\uc2a4"},"\ub0b4 \uc18c\uc2a4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nclass Solution {\n\n    static int solve(int n, int[] s, int d, int m){\n        // Complete this function\n        int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            int sum = 0;\n        \n            for (int j = i; j < i + m && j < n; j++)\n            {\n                sum += s[j];\n            }\n            \n            if (sum == d)\n            {\n                count++;\n            }\n        }        \n        return count;\n    }\n\n    static void Main(String[] args) {\n        int n = Convert.ToInt32(Console.ReadLine());\n        string[] s_temp = Console.ReadLine().Split(' ');\n        int[] s = Array.ConvertAll(s_temp,Int32.Parse);\n        string[] tokens_d = Console.ReadLine().Split(' ');\n        int d = Convert.ToInt32(tokens_d[0]);\n        int m = Convert.ToInt32(tokens_d[1]);\n        int result = solve(n, s, d, m);\n        Console.WriteLine(result);\n    }\n}\n")),(0,i.kt)("h2",{id:"adititayal9\uc758-\ub2f5\uc548"},"adititayal9\uc758 \ub2f5\uc548"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.*;\n\npublic class Solution {\n    \n    public static int getNumberOfWays(int n, int d, int m, int[] sum) {\n        // Modify array to make each 'i' contain the running sum of prior elements\n        for (int i = 1; i < n; i++) {\n            sum[i] += sum[i - 1];\n        }\n        \n        // Set number of ways counter\n        // If there are >= 'm' squares AND the first possible piece has sum = 'd', 1\n        // Else, 0\n        int numberOfWays = (m <= n && sum[m - 1] == d) ? 1 : 0;\n        \n        // Check the sums for pieces ending at index 'm' through 'n - 1'\n        for (int i = m; i < n; i++) {\n            // If the sum of the piece is equal to 'd'\n            if (sum[i] - sum[i - m] == d) {\n                // Increment ways counter\n                numberOfWays++;\n            }\n        }\n        \n        return numberOfWays;\n    }\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] squares = new int[n];\n        for(int squares_i=0; squares_i < n; squares_i++){\n            squares[squares_i] = in.nextInt();\n        }\n        int d = in.nextInt();\n        int m = in.nextInt();\n        in.close();\n\n        System.out.println(getNumberOfWays(n, d, m, squares));\n    }\n}\n")),(0,i.kt)("h2",{id:"prince_sai\uc758-\ub2f5\uc548"},"Prince_sai\uc758 \ub2f5\uc548"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"int getWays(int n, int* squares, int d, int m){\n    // Complete this function\n    int sum[105];\n    int count=0;\n    sum[0]=0;\n    for(int i=0;i<n;i++)sum[i+1]=sum[i]+squares[i];\n    for(int i=0;i<=n-m;i++){\n        if(sum[i+m]-sum[i]==d){\n            count++;\n        }\n    }\n    return count;\n}\n")),(0,i.kt)("h2",{id:"kcoddington0925\uc758-\ub2f5\uc548"},"kcoddington0925\uc758 \ub2f5\uc548"),(0,i.kt)("p",null,"\uc5ed\uc2dc linq\ub97c \uc0ac\uc6a9\ud558\uba74 \ub2e8 \uc138\uc904\ub85c \ubb38\uc81c\ub97c \ud480 \uc218 \uc788\ub2e4.."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nclass Solution\n{\n\n    static int getWays(int[] squares, int d, int m)\n    {\n        int ways = 0;\n        for (int i = 0; i < squares.Length - (m - 1); i++)\n            if (squares.Skip(i).Take(m).Sum() == d) ways++;\n        return ways;\n    }\n\n    static void Main(String[] args)\n    {\n        int n = Convert.ToInt32(Console.ReadLine());\n        string[] s_temp = Console.ReadLine().Split(' ');\n        int[] s = Array.ConvertAll(s_temp, Int32.Parse);\n        string[] tokens_d = Console.ReadLine().Split(' ');\n        int d = Convert.ToInt32(tokens_d[0]);\n        int m = Convert.ToInt32(tokens_d[1]);\n        int result = getWays(s, d, m);\n        Console.WriteLine(result);\n    }\n}\n")),(0,i.kt)("h2",{id:"\ub290\ub080\uc810"},"\ub290\ub080\uc810"),(0,i.kt)("p",null,"\ubb38\uc81c \uc790\uccb4\ub97c \uc774\ud574\ud558\uba74 \uc27d\uac8c \ud480 \uc218 \uc788\ub294 \ubb38\uc81c\uc774\ub2e4."),(0,i.kt)("p",null,"\uc0ac\uc2e4 \ucf54\ub529\uc744 \ud558\ub2e4 \ubcf4\uba74, for\ubb38 \uc548\uc5d0 \uc5ec\ub7ec\uac1c\uc758 \uc870\uac74\ubb38\uc744 \ub123\ub294 \uacbd\uc6b0\uac00 \uadf8\ub807\uac8c \ub9ce\uc9c0\ub294 \uc54a\uc558\ub358 \uac83 \uac19\uc740\ub370.."),(0,i.kt)("p",null,"\uc77c\ub2e8 \ub0b4\uac00 \uc9e0 \ucf54\ub4dc\uc758 \uacbd\uc6b0 O(n2) \uc774\uace0 \ucd9c\uc81c\uc790\uc758 \uacbd\uc6b0\ub294 O(n) \uc778\ub4ef \ud558\ub2e4."),(0,i.kt)("p",null,"\ucd9c\uc81c\uc790\ub294 \uadf8\ub0e5 \ubc30\uc5f4\uc744 \uc774\uc804 \ud569\uacc4\uc758 \ub204\uc801 \ud569\uacc4\uac00 \ud3ec\ud568\ub418\ub3c4\ub85d \ubc30\uc5f4\uc744 \uc218\uc815\ud558\uace0, \uac70\uae30\uc11c \ub2f5\uc744 \ucc3e\ub294 \ubc29\uc2dd\uc73c\ub85c \uc9c4\ud589 \ud55c \uac83 \uac19\ub2e4."))}p.isMDXComponent=!0}}]);