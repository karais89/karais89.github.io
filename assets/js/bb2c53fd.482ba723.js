"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[25541],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),d=s,m=p["".concat(l,".").concat(d)]||p[d]||g[d]||i;return t?r.createElement(m,a(a({ref:n},c),{},{components:t})):r.createElement(m,a({ref:n},c))}));function d(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,a=new Array(i);a[0]=p;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,a[1]=o;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},55059:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=t(87462),s=(t(67294),t(3905));const i={title:"[Codewars #22] longest_palindrome (6kyu)",authors:["karais89"],tags:["codewars","kata"]},a=void 0,o={permalink:"/2019/01/09/codewars-longest-palindrome",editUrl:"https://github.com/karais89/karais89.github.io/tree/main/my-website/blog/2019-01-09-codewars-longest-palindrome/index.md",source:"@site/blog/2019-01-09-codewars-longest-palindrome/index.md",title:"[Codewars #22] longest_palindrome (6kyu)",description:"Instructions",date:"2019-01-09T00:00:00.000Z",formattedDate:"2019\ub144 1\uc6d4 9\uc77c",tags:[{label:"codewars",permalink:"/tags/codewars"},{label:"kata",permalink:"/tags/kata"}],readingTime:3.295,hasTruncateMarker:!1,authors:[{name:"karais89",title:"Game Developer",url:"https://github.com/karais89",imageURL:"https://github.com/karais89.png",key:"karais89"}],frontMatter:{title:"[Codewars #22] longest_palindrome (6kyu)",authors:["karais89"],tags:["codewars","kata"]},prevItem:{title:"[Codewars #21] Parse HTML/CSS Colors (6kyu)",permalink:"/2019/01/09/codewars-Parse-HTML-CSS-Colors"},nextItem:{title:"[Codewars #19] Build Tower (6kyu)",permalink:"/2019/01/08/codewars-Build-Tower"}},l={authorsImageUrls:[void 0]},u=[{value:"Instructions",id:"instructions",level:2},{value:"My Solution",id:"my-solution",level:2},{value:"Best Practices 1",id:"best-practices-1",level:2},{value:"Best Practices 2",id:"best-practices-2",level:2}],c={toc:u};function g(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"instructions"},"Instructions"),(0,s.kt)("p",null,"Longest Palindrome"),(0,s.kt)("p",null,"Find the length of the longest substring in the given string s that is the same in reverse."),(0,s.kt)("p",null,"As an example, if the input was \u201cI like racecars that go fast\u201d, the substring (racecar) length would be 7."),(0,s.kt)("p",null,"If the length of the input string is 0, the return value must be 0."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'"a" -> 1\n"aab" -> 2\n"abcde" -> 1\n"zzbaabcd" -> 4\n"" -> 0\n')),(0,s.kt)("h2",{id:"my-solution"},"My Solution"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Kata\n{\n  public static string ReverseString(string s)\n  {\n      char[] arr = s.ToCharArray();\n      Array.Reverse(arr);\n      return new string(arr);\n  }\n\n  public static int GetLongestPalindrome(string str)\n  {\n    //your code :)\n    if (str == null || str.Length == 0)\n    {\n      return 0;\n    }\n\n    // \ub9e8 \ucc98\uc74c \uae00\uc790\uc640 \ub9e8 \ub9c8\uc9c0\ub9c9 \uae00\uc790\uac00 \uc77c\uce58\ud558\uace0, \uc810 \uc810 \ucc28\uc774\ub97c \uc881\ud788\uba74\uc11c \ubaa8\ub450 \uc77c\uce58\ud558\uba74 \ud68c\ubb38\uc774\ub2e4?\n    // \uc544\ub2c8\uba74 \uadf8\ub0e5 \ucc98\uc74c\ubb38\uc790\ub97c \ub4a4\uc9d1\uc740\uac83\uacfc \uc77c\uce58\ud558\uba74 \ud68c\ubb38?\n    int longestVal = 0;\n\n    // \ud68c\ubb38 \ud310\ub2e8\n    for (int i = 0; i < str.Length; i++)\n    {\n      char ch = str[i];\n      for (int j = str.Length - 1; j >= i; j--)\n      {\n        if (ch != str[j])\n        {\n          continue;\n        }\n\n        string subStr = str.Substring(i, j-i+1);\n        if (subStr == ReverseString(subStr))\n        {\n          if (longestVal < subStr.Length)\n          {\n            longestVal = subStr.Length;\n          }\n        }\n      }\n    }\n\n    return longestVal;\n  }\n}\n")),(0,s.kt)("p",null,"\ud68c\ubb38 \ud310\ub2e8 \uc54c\uace0\ub9ac\uc998"),(0,s.kt)("p",null,"\ub0b4 \ud574\uacb0\ucc45\uc740 \uba3c\uc800 \uccab\ubc88\uc9f8 \ubb38\uc790 \ubd80\ud130 \ud310\ub2e8\ud558\uc5ec, \uac00\uc7a5 \ub9c8\uc9c0\ub9c9 \ubb38\uc790\uc5d0\uc11c\ubd80\ud130 \ubb38\uc790\uac00 \uac19\uc740\uc9c0 \ud310\ub2e8\ud55c\ub2e4.\n\ub9cc\uc57d \ubb38\uc790\uac00 \uac19\uc73c\uba74 \ud68c\ubb38\uc774 \ub420 \uac00\ub2a5\uc131\uc774 \uc788\ub294 \ubb38\uc7a5\uc774\ubbc0\ub85c, ReverseString\uc73c\ub85c \ubb38\uc790\ub97c \ub4a4\uc9da\uc5b4\ub3c4 \uac19\uc740 \ubb38\uc790\uc5f4\uc778\uc9c0 \ud310\ub2e8\ud560 \ud6c4 \uc788\ub2e4."),(0,s.kt)("h2",{id:"best-practices-1"},"Best Practices 1"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Kata\n{\n  public static int GetLongestPalindrome(string str)\n  {\n    //Case String is Null or Empty\n    if (string.IsNullOrEmpty(str)) return 0;\n    //Variable to store the length of the longest reversible word\n    int longest = 0;\n    //Array with all the subtrings in the string passed to the function\n    string [] subStrs = GetSubstrings(str);\n    //For each string in the array verify if it is reversible and if it is,\n    //compare its length with longest\n    foreach (string s in subStrs)\n      longest = IsReversible(s) && s.Length > longest ? s.Length :\n        longest;\n    return longest;\n  }\n\n  //Function that verifies if a word is reversible\n  public static bool IsReversible(string word)\n  {\n    char [] temp = word.ToCharArray();\n    Array.Reverse(temp);\n    string revWord = new string (temp);\n    //Console.WriteLine(word + " " + revWord);\n    return (revWord != word) ? false : true;\n  }\n\n  //Function that gets an array of all the substrings in a string\n  public static string [] GetSubstrings(string word)\n  {\n    int count = 0;\n    int length = word.Length;\n    List<string> Substrs = new List<string>();\n    for (int i = 0; i < word.Length; i++)\n    {\n      Substrs.Add(word.Substring(i));\n      for (int j = 1; j < length; j++)\n      {\n        Substrs.Add(word.Substring(i,j));\n      }\n      length--;\n    }\n    return Substrs.ToArray();\n  }\n}\n')),(0,s.kt)("p",null,"\ud45c 3\uac1c\ub97c \ud68d\ub4dd\ud55c \ub2f5\uc548\uc774\ub2e4."),(0,s.kt)("h2",{id:"best-practices-2"},"Best Practices 2"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Kata\n{\n  public static bool IsPalindrome(string str)\n  {\n    var arr = str.ToCharArray();\n    Array.Reverse(arr);\n    var reversed = new string(arr);\n    return str == reversed;\n  }\n\n  public static int GetLongestPalindrome(string str)\n  {\n    if (str == null)\n      return 0;\n\n    int max = 0;\n    for (int i = 0; i < str.Length; ++i)\n      for (int j = i; j < str.Length; ++j)\n        if (IsPalindrome(str.Substring(i, j - i + 1)))\n          max = Math.Max(max, j - i + 1);\n\n    return max;\n  }\n}\n")),(0,s.kt)("p",null,"\uc774\uac8c \ub354 \uae54\ub054\ud55c \ubc29\ubc95 \uc778\ub4ef \ud558\ub2e4."))}g.isMDXComponent=!0}}]);